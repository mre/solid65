#!/usr/bin/env python3
""" This script checks the outputs from a test run to see that the internal
state of the CPU is the same for each log. That is, the emulators are checked
to see that the registers A, X and Y, the program counter, stack pointer and
status flags are the same, on each cycle. Therefore, this script also checks
that the number of bus accesses is the same.
"""

import sys
import glob

EMUS = ['gianlucag', 'rubbermallet']

def readfile(dirname, emuname):
    """ returns the reported reads and writes in the file """
    for i in glob.glob("%s/%s.results" % (dirname, emuname)):
        with open(i, "r") as f:
            for line in f:
                yield tuple(line.strip().split(" "))

def final_result(a, b):
    """ checks the CPU's internal state after the instruction's completed
    i.e. no reads/writes, no cycle count, nothing else is checked """
    def extract(f):
        list([l[4:] for l in f if l[0] == 'a'])

    return extract(a) == extract(b)

def okay(a, b):
    """ the last check just returns False. """
    return False

def field(dirname, a):
    alist = list(readfile(dirname, a))
    blist = list(readfile(dirname, "truth"))

    for fn in [final_result, okay]:
        if not fn(alist, blist):
            return fn.__name__

    return "error"

# print the CSV header
print("test_name,%s" % ",".join(EMUS))

for test in glob.glob("tests/*"):
    print("%s,%s" % (test, ",".join([field(test, x) for x in EMUS])))
